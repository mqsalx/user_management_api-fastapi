"""initial

Revision ID: 7914f2d7a59e
Revises: 
Create Date: 2025-07-13 17:08:51.255908

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '7914f2d7a59e'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('permissions',
    sa.Column('permission_id', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('permission_id'),
    sa.UniqueConstraint('permission_id'),
    schema='test'
    )
    op.create_table('roles',
    sa.Column('role_id', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('role_id'),
    sa.UniqueConstraint('role_id'),
    schema='test'
    )
    op.create_table('tokens',
    sa.Column('token_id', sa.String(), nullable=False),
    sa.Column('access_token', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('token_id'),
    sa.UniqueConstraint('token_id'),
    schema='test'
    )
    op.create_table('role_permission',
    sa.Column('role_id', sa.String(), nullable=False),
    sa.Column('permission_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['test.permissions.permission_id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['test.roles.role_id'], ),
    sa.PrimaryKeyConstraint('role_id', 'permission_id'),
    schema='test'
    )
    op.create_table('users',
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', 'SUSPENDED', name='userstatusenum'), nullable=False),
    sa.Column('role_id', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['test.roles.role_id'], ),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email'),
    schema='test'
    )
    op.create_table('sessions',
    sa.Column('session_id', sa.String(), nullable=False),
    sa.Column('token_id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('login_at', sa.DateTime(), nullable=True),
    sa.Column('logout_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['token_id'], ['test.tokens.token_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['test.users.user_id'], ),
    sa.PrimaryKeyConstraint('session_id'),
    sa.UniqueConstraint('session_id'),
    schema='test'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('sessions', schema='test')
    op.drop_table('users', schema='test')
    op.drop_table('role_permission', schema='test')
    op.drop_table('tokens', schema='test')
    op.drop_table('roles', schema='test')
    op.drop_table('permissions', schema='test')
    # ### end Alembic commands ###
